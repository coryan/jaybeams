language: cpp

dist: trusty
sudo: false

matrix:
  include:
    - os: linux
      compiler: gcc
      env: IMAGE=coryan/jaybeamsdev-ubuntu16.04 COMPILER=g++ CXXFLAGS=-O3 CHECK_STYLE=yes CONFIGUREFLAGS="--enable-fftw3"

    - os: linux
      compiler: gcc
      env: IMAGE=coryan/jaybeamsdev-ubuntu14.04 COMPILER=g++ CXXFLAGS="-O0 -g -coverage" COVERAGE=yes CONFIGUREFLAGS="--enable-fftw3"

    - os: linux
      compiler: gcc
      env: IMAGE=coryan/jaybeamsdev-fedora23 COMPILER=clang++ CXXFLAGS=-g GENDOCS=yes CONFIGUREFLAGS="--enable-fftw3"

    - os: linux
      compiler: gcc
      env: IMAGE=coryan/jaybeamsdev-fedora23 COMPILER=g++ CXXFLAGS=-g CONFIGUREFLAGS="--enable-fftw3"

    - os: linux
      compiler: gcc
      env: IMAGE=coryan/jaybeamsdev-fedora24 COMPILER=clang++ CXXFLAGS=-O3 CONFIGUREFLAGS="--enable-fftw3"

services:
  - docker

script:
  - uname -a
  - REPO=`git config remote.origin.url`
  - REPO_REF=${REPO/https:\/\/}
  - docker build --help
  - docker pull ${IMAGE?}
  - /usr/bin/env ${COMPILER?} --version
  - docker run --rm -it --env CXX=${COMPILER?} --env CXXFLAGS="${CXXFLAGS}" -v $PWD:$PWD ${IMAGE?} /bin/sh -c "cd $PWD && ./bootstrap && ./configure ${CONFIGUREFLAGS} && make -j 2 check"
  - cat test-suite.log || echo "Could not print test logs"
  - if [ "x${CHECK_STYLE}" = "xyes" ]; then
    docker run --rm -it --env CXX=${COMPILER?} --env CXXFLAGS="${CXXFLAGS}" -v $PWD:$PWD ${IMAGE?} /bin/sh -c "cd $PWD && make check-style" ;
    fi

install:
  - if [ "x${COVERAGE}" = "xyes" ]; then gem install coveralls-lcov ; fi

after_success:
  # We take some additional action on successful builds ...
  - cd ${TRAVIS_BUILD_DIR?}
  # ... if this is a code coverage build we upload the coverage results ...
  - if [ "x$TRAVIS_PULL_REQUEST" = "xfalse" -a "x${COVERAGE}" = "xyes" ]; then
    docker run --rm -it -v $PWD:$PWD ${IMAGE?} /bin/sh -c "cd $PWD && ci/coverage.sh" ;
    coveralls-lcov --repo-token ${COVERALLS_TOKEN?} coverage.info ;
    fi
  # ... if this is a documentation build we generate the docs ...
  - if [ "x${TRAVIS_BRANCH}" != "xmaster" ]; then GENDOCS=no ; fi
  # ... create the Doxygen documentation inside the docker container,
  # and then push it using the host ...
  - if [ "x$TRAVIS_PULL_REQUEST" = "xfalse" -a "x${GENDOCS}" = "xyes" ]; then
    docker run --rm -it --env GIT_NAME="${GIT_NAME?}" --env GIT_EMAIL=${GIT_EMAIL?} -v $PWD:/home/${USER?}/jaybeams ${IMAGE?} /bin/sh -c "cd /home/${USER?}/jaybeams && ci/gendocs.sh" ;
    (cd doc/html ; git push https://${GH_TOKEN?}@${REPO_REF?} gh-pages) ;
    fi

notifications:
  email: false
